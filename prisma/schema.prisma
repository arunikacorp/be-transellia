// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      String?   @default("user")
  subscriptionType String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  OwnerAt  Store?
  isEmployee Boolean? @default(false)
  employeeId String?
  EmployeeDetail Employee[]
}
  
model UserDetails {
  id String @id @default(cuid())
  userId String @unique
  name      String?
  imageProfile String?
  phoneNumber String?
  address String?
}

model Store {
  id String @id @default(cuid())
  userId String @unique
  products Product[]
  employees Employee[]
  address String?
  name String
  User User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id String @id @default(cuid())
  userId String @unique
  User User @relation(fields: [userId], references: [id])
  StoreId String
  Store Store @relation(fields: [StoreId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(cuid())
  name String
  description String?
  price Float
  StoreId String
  Store Store @relation(fields: [StoreId], references: [id])
  HistorySales HistorySale[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HistorySale {
  id String @id @default(cuid())
  productId String
  EmployeeId String
  totalProduct Float
  paymentMethod String?
  totalPrice Float
  Product Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}